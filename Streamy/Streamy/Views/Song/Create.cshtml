@using Streamy.Core.Models.Song
@model SongCreateModel

@{
    ViewData["Title"] = "Create Song";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <link rel="stylesheet" href="~/Plugins/select2/css/select2.css">
    <link rel="stylesheet" href="~/Plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="~/Plugins/bootstrap4-duallistbox/bootstrap-duallistbox.min.css">
    <link rel="stylesheet" href="~/Plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
    <link rel="stylesheet" href="~/Plugins/bs-stepper/css/bs-stepper.min.css">

</head>

<body>
    <section class="content">
        <div class="container-fluid">
            <div class="card card-default">
                <div class="card-header">
                    <h4 class="card-title">Add Song</h4>
                    <form class="forms-sample" asp-action="Create" asp-controller="Song" method="post">
                        <div class="row">
                            <div class="col-md-6">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="form-group">
                                    <label asp-for=Title></label>
                                    <input asp-for=Title type="text" class="form-control" placeholder="Enter Title">
                                    <span asp-validation-for=Title class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for=Duration></label>
                                    <input asp-for=Duration type="text" class="form-control" placeholder="">
                                    <span asp-validation-for=Duration class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for=ReleaseDate></label>
                                    <input asp-for=ReleaseDate type="date" class="form-control">
                                    <span asp-validation-for=ReleaseDate class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label>File upload</label>
                                    <input type="file" id="imgupload" name="img[]" class="file-upload-default">
                                    <div class="input-group col-xs-12">
                                        <input type="text" class="form-control file-upload-info" disabled placeholder="Upload Image">
                                        <span class="input-group-append">
                                            <button class="file-upload-browse btn btn-primary" id="OpenImgUpload" type="button">Upload</button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for=GenreId></label>
                                    <select asp-for=GenreId asp-items=@((SelectList)ViewData["Genres"]) class="form-control" placeholder="Select Artist"></select>
                                    <span asp-validation-for=GenreId class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for=AlbumId></label>
                                    <select asp-for=AlbumId asp-items=@((SelectList)ViewData["Albums"]) class="form-control" placeholder="Select Album" style="width:100%">
                                    </select>
                                    <span asp-validation-for=AlbumId class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label>Artist</label>
                                    <select asp-for=@Model.ArtistIds asp-items=@((SelectList)ViewData["Artists"]) class="select2" multiple="multiple" data-placeholder="Select a State" data-dropdown-css-class="select2-purple" style="width: 100%;">
                                    </select>
                                    <span asp-validation-for=ArtistIds class="text-danger"></span>
                                </div>

                            </div>
                        </div>

                        <button type="submit" class="btn btn-outline-primary">Create</button>
                        <button class="btn btn-outline-behance" asp-action="Index">Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </section>

    @section Scripts{
    <script src="~/js/adminlte.js"></script>
    <script src="~/Plugins/jquery/jquery.js"></script>
    <script src="~/Plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/Plugins/select2/js/select2.full.min.js"></script>
    <script src="~/Plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/assets/js/file-upload.js"></script>

    <script>
             $(function () {
          //Initialize Select2 Elements
          $('.select2').select2()

          //Initialize Select2 Elements
          $('.select2bs4').select2({
            theme: 'bootstrap4'
          })

        })
        // BS-Stepper Init
        document.addEventListener('DOMContentLoaded', function () {
          window.stepper = new Stepper(document.querySelector('.bs-stepper'))
        })

        // DropzoneJS Demo Code Start
        Dropzone.autoDiscover = false

        // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
        var previewNode = document.querySelector("#template")
        previewNode.id = ""
        var previewTemplate = previewNode.parentNode.innerHTML
        previewNode.parentNode.removeChild(previewNode)

        var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
          url: "/target-url", // Set the url
          thumbnailWidth: 80,
          thumbnailHeight: 80,
          parallelUploads: 20,
          previewTemplate: previewTemplate,
          autoQueue: false, // Make sure the files aren't queued until manually added
          previewsContainer: "#previews", // Define the container to display the previews
          clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
        })

        myDropzone.on("addedfile", function(file) {
          // Hookup the start button
          file.previewElement.querySelector(".start").onclick = function() { myDropzone.enqueueFile(file) }
        })

    </script>
    }
</body>
</html>




